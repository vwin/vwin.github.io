<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Ubuntu Jmeter性能测试</title>
      <link href="/2018/08/01/Ubuntu%20Jmeter%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
      <content type="html"><![CDATA[<h2 id="Ubuntu安装JDK"><a href="#Ubuntu安装JDK" class="headerlink" title="Ubuntu安装JDK"></a>Ubuntu安装JDK</h2><ol><li><p>更新软件包列表</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure></li><li><p>安装openjdk-8-jdk</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openjdk-8-jdk</span><br></pre></td></tr></table></figure></li><li><p>查看Java版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure></li></ol><h2 id="Mac安装Java"><a href="#Mac安装Java" class="headerlink" title="Mac安装Java"></a>Mac安装Java</h2><h3 id="JRE和JDK的区别"><a href="#JRE和JDK的区别" class="headerlink" title="JRE和JDK的区别"></a>JRE和JDK的区别</h3><ul><li>JRE： Java Runtime Environment</li><li>JDK：Java Development Kit</li><li>JRE顾名思义是java运行时环境，包含了java虚拟机，java基础类库。是使用java语言编写的程序运行所需要的软件环境，是提供给想运行java程序的用户使用的。</li><li>JDK顾名思义是java开发工具包，是程序员使用java语言编写java程序所需的开发工具包，是提供给程序员使用的。JDK包含了JRE，同时还包含了编译java源码的编译器javac，还包含了很多java程序调试和分析的工具：jconsole，jvisualvm等工具软件，还包含了java程序编写所需的文档和demo例子程序。所以JDK的包比JRE大很多。</li><li>如果你需要运行java程序，只需安装JRE就可以了</li><li>如果你需要编写java程序，需要安装JDK。</li><li>JRE根据不同操作系统（如：windows，linux等）和不同JRE提供商（IBM,ORACLE等）有很多版本，最常用的是Oracle公司收购SUN公司的JRE版本。</li></ul><h3 id="安装JRE-JDK"><a href="#安装JRE-JDK" class="headerlink" title="安装JRE/JDK"></a>安装JRE/JDK</h3><ul><li>JRE下载地址：<a href="http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html</a></li><li>JDK下载地址：<br><a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a><br>Mac下载对应的包，下载完成后直接安装即可</li></ul><h3 id="环境变量配置"><a href="#环境变量配置" class="headerlink" title="环境变量配置"></a>环境变量配置</h3><ol><li>JRE:如果安装的是JRE，那么在Mac上默认的路径是<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin/Contents/Home</span><br></pre></td></tr></table></figure></li></ol><ul><li>配置环境变量（vi ~/.bash_profile）：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=/Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin/Contents/Home</span><br><span class="line">PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">export JAVA_HOME</span><br><span class="line">export PATH</span><br></pre></td></tr></table></figure></li></ul><ol><li>JDK:如果安装的是JDK，那么在Mac上默认的路径是<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Library/Java/JavaVirtualMachines/</span><br></pre></td></tr></table></figure></li></ol><ul><li>配置环境变量（vi ~/.bash_profile）：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home</span><br><span class="line">PATH=$JAVA_HOME/bin:$PATH:.</span><br><span class="line">CLASSPATH=$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar:.</span><br><span class="line">export JAVA_HOME</span><br><span class="line">export PATH</span><br><span class="line">export CLASSPATH</span><br></pre></td></tr></table></figure></li></ul><h2 id="安装Jmeter"><a href="#安装Jmeter" class="headerlink" title="安装Jmeter"></a>安装Jmeter</h2><ol><li><p>下载Jmeter4.0</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c http://www-us.apache.org/dist//jmeter/binaries/apache-jmeter-4.0.tgz</span><br></pre></td></tr></table></figure></li><li><p>解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xf apache-jmeter-4.0.tgz</span><br></pre></td></tr></table></figure></li><li><p>运行sample</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apache-jmeter-4.0/bin/./jmeter -n -t apache-jmeter-4.0/extras/Test.jmx</span><br></pre></td></tr></table></figure></li></ol><h2 id="Jmeter基础"><a href="#Jmeter基础" class="headerlink" title="Jmeter基础"></a>Jmeter基础</h2>]]></content>
      
      <categories>
          
          <category> 性能测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> jmeter </tag>
            
            <tag> jdk </tag>
            
            <tag> 性能测试 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>tmux 配置</title>
      <link href="/2018/07/17/tmux-%E9%85%8D%E7%BD%AE/"/>
      <content type="html"><![CDATA[<p>tmux基本配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">set -g prefix C-a <span class="comment">#</span></span><br><span class="line">unbind C-b <span class="comment"># C-b即Ctrl+b键，unbind意味着解除绑定</span></span><br><span class="line">bind C-a send-prefix <span class="comment"># 绑定Ctrl+a为新的指令前缀</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从tmux v1.6版起，支持设置第二个指令前缀</span></span><br><span class="line">set-option -g prefix2 ` <span class="comment"># 设置一个不常用的`键作为指令前缀，按键更快些</span></span><br><span class="line">set-option -g mouse on <span class="comment"># 等同于以上4个指令的效果</span></span><br><span class="line">unbind <span class="string">'"'</span></span><br><span class="line">bind - splitw -v -c <span class="string">'#&#123;pane_current_path&#125;'</span> <span class="comment"># 垂直方向新增面板，默认进入当前目录</span></span><br><span class="line">unbind %</span><br><span class="line">bind | splitw -h -c <span class="string">'#&#123;pane_current_path&#125;'</span> <span class="comment"># 水平方向新增面板，默认进入当前目录</span></span><br><span class="line"><span class="comment"># 绑定快捷键为r,读取配置文件</span></span><br><span class="line">bind r source-file ~/.tmux.conf \; display-message <span class="string">"Config reloaded.."</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tmux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>豆瓣电影评论生成词云</title>
      <link href="/2018/07/13/%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1%E8%AF%84%E8%AE%BA%E7%94%9F%E6%88%90%E8%AF%8D%E4%BA%91/"/>
      <content type="html"><![CDATA[<h2 id="抓取豆瓣电影评论并生成词云"><a href="#抓取豆瓣电影评论并生成词云" class="headerlink" title="抓取豆瓣电影评论并生成词云"></a>抓取豆瓣电影评论并生成词云</h2><a id="more"></a><h2 id="目标：抓取豆瓣电影评论生成词云"><a href="#目标：抓取豆瓣电影评论生成词云" class="headerlink" title="目标：抓取豆瓣电影评论生成词云"></a>目标：抓取豆瓣电影评论生成词云</h2><h3 id="第一步：抓取评论"><a href="#第一步：抓取评论" class="headerlink" title="第一步：抓取评论"></a>第一步：抓取评论</h3><p>代码如下。具体见注释<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getCommentsById</span><span class="params">(movieId, pageNum)</span>:</span></span><br><span class="line">    eachCommentList = []</span><br><span class="line">    <span class="comment"># 抓取评论的页数</span></span><br><span class="line">    <span class="keyword">if</span> pageNum &gt; <span class="number">0</span>:</span><br><span class="line">    </span><br><span class="line">        start = (pageNum - <span class="number">1</span>) * <span class="number">20</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    <span class="comment"># 豆瓣电影评论的地址</span></span><br><span class="line">    requrl = (</span><br><span class="line">        <span class="string">"https://movie.douban.com/subject/"</span></span><br><span class="line">        + movieId</span><br><span class="line">        + <span class="string">"/comments"</span></span><br><span class="line">        + <span class="string">"?"</span></span><br><span class="line">        + <span class="string">"start="</span></span><br><span class="line">        + str(start)</span><br><span class="line">        + <span class="string">"&amp;limit=20"</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 抓取</span></span><br><span class="line">        resp = requests.get(requrl)</span><br><span class="line">        <span class="comment"># 用utf-8格式化返回结果</span></span><br><span class="line">        html_data = resp.content.decode(<span class="string">"utf-8"</span>)</span><br><span class="line">        <span class="comment"># 用beautifulsoup处理返回结果，指定parser为html</span></span><br><span class="line">        soup = bs(html_data, <span class="string">"html.parser"</span>)</span><br><span class="line">        <span class="comment"># 获取评论</span></span><br><span class="line">        comment_div_lits = soup.find_all(<span class="string">"div"</span>, class_=<span class="string">"comment"</span>)</span><br><span class="line">        <span class="comment"># 将评论写入数组</span></span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> comment_div_lits:</span><br><span class="line">            <span class="keyword">if</span> item.find_all(<span class="string">"p"</span>)[<span class="number">0</span>].string <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">                eachCommentList.append(item.find_all(<span class="string">"p"</span>)[<span class="number">0</span>].string)</span><br><span class="line">    <span class="comment"># 捕获异常</span></span><br><span class="line">    <span class="keyword">except</span> RequestException <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">"请求问题，原因：%s"</span> % e)</span><br><span class="line">    <span class="comment"># 返回评论数组</span></span><br><span class="line">    <span class="keyword">return</span> eachCommentList</span><br></pre></td></tr></table></figure><p></p><h3 id="第二步：将抓取的评论转换为字符串"><a href="#第二步：将抓取的评论转换为字符串" class="headerlink" title="第二步：将抓取的评论转换为字符串"></a>第二步：将抓取的评论转换为字符串</h3><p>代码如下。具体见注释<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">commentList = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    num = i + <span class="number">1</span></span><br><span class="line">    <span class="comment"># 使用上面的方法获取评论列表</span></span><br><span class="line">    commentList_temp = getCommentsById(movieId=movieId, pageNum=num)</span><br><span class="line">    commentList.append(commentList_temp)</span><br><span class="line">    <span class="comment"># 将列表中的数据转换为字符串</span></span><br><span class="line">comments = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(len(commentList)):</span><br><span class="line">    <span class="comment"># print(commentList[k])</span></span><br><span class="line">    <span class="comment"># 去掉空格等</span></span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> range(len(commentList[k])):</span><br><span class="line">        comments = comments + str(commentList[k][m]).strip()</span><br></pre></td></tr></table></figure><p></p><h3 id="第三步：使用正则去掉标点"><a href="#第三步：使用正则去掉标点" class="headerlink" title="第三步：使用正则去掉标点"></a>第三步：使用正则去掉标点</h3><p>代码如下。具体见注释<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用正则去掉标点</span></span><br><span class="line">filtrate = re.compile(<span class="string">r"[^\u4E00-\u9FA5]"</span>)  <span class="comment"># 提取中文，过滤掉非中文字符</span></span><br><span class="line">filtered_str = filtrate.sub(<span class="string">r""</span>, comments)  <span class="comment"># replace</span></span><br></pre></td></tr></table></figure><p></p><h3 id="第四步：使用结巴分词进行中文分词"><a href="#第四步：使用结巴分词进行中文分词" class="headerlink" title="第四步：使用结巴分词进行中文分词"></a>第四步：使用结巴分词进行中文分词</h3><p>代码如下。具体见注释<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用结巴分词进行中文分词</span></span><br><span class="line">segment = jieba.lcut(filtered_str)</span><br><span class="line">words_df = pd.DataFrame(&#123;<span class="string">"segment"</span>: segment&#125;)</span><br></pre></td></tr></table></figure><p></p><h3 id="第五步：去掉停用词"><a href="#第五步：去掉停用词" class="headerlink" title="第五步：去掉停用词"></a>第五步：去掉停用词</h3><p>代码如下。具体见注释<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 去掉停用词。</span></span><br><span class="line"><span class="comment"># 停用词是指在信息检索中，为节省存储空间和提高搜索效率</span></span><br><span class="line"><span class="comment"># 在处理自然语言数据（或文本）之前或之后会自动过滤掉某些字或词</span></span><br><span class="line"><span class="comment"># 这些字或词即被称为Stop Words（停用词）。</span></span><br><span class="line">stopwords = pd.read_csv(</span><br><span class="line">    <span class="string">"./stopwords.txt"</span>,</span><br><span class="line">    index_col=<span class="keyword">False</span>,</span><br><span class="line">    quoting=<span class="number">3</span>,</span><br><span class="line">    sep=<span class="string">"t"</span>,</span><br><span class="line">    names=[<span class="string">"stopword"</span>],</span><br><span class="line">    encoding=<span class="string">"utf-8"</span>,</span><br><span class="line">)</span><br><span class="line">words_df = words_df[~words_df.segment.isin(stopwords.stopword)]</span><br></pre></td></tr></table></figure><p></p><h3 id="第六步：统计词频"><a href="#第六步：统计词频" class="headerlink" title="第六步：统计词频"></a>第六步：统计词频</h3><p>代码如下。具体见注释<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计词频</span></span><br><span class="line">words_stat = words_df.groupby(by=[<span class="string">"segment"</span>])[<span class="string">"segment"</span>].agg(&#123;<span class="string">"计数"</span>: numpy.size&#125;)</span><br><span class="line">words_stat = words_stat.reset_index().sort_values(by=[<span class="string">"计数"</span>], ascending=<span class="keyword">False</span>)</span><br></pre></td></tr></table></figure><p></p><h3 id="第七步：用词云进行显示"><a href="#第七步：用词云进行显示" class="headerlink" title="第七步：用词云进行显示"></a>第七步：用词云进行显示</h3><p>代码如下。具体见注释<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用词云进行显示</span></span><br><span class="line">wordcloud = WordCloud(</span><br><span class="line">    font_path=<span class="string">"./simkai.ttf"</span>,</span><br><span class="line">    background_color=<span class="string">"white"</span>,</span><br><span class="line">    max_font_size=<span class="number">80</span>,</span><br><span class="line">    width=<span class="number">1000</span>,</span><br><span class="line">    height=<span class="number">860</span>,</span><br><span class="line">    margin=<span class="number">2</span>,</span><br><span class="line">)</span><br><span class="line">word_frequence = &#123;x[<span class="number">0</span>]: x[<span class="number">1</span>] <span class="keyword">for</span> x <span class="keyword">in</span> words_stat.head(<span class="number">1000</span>).values&#125;</span><br><span class="line"></span><br><span class="line">wordcloud = wordcloud.fit_words(word_frequence)</span><br><span class="line">plt.imshow(wordcloud)</span><br><span class="line">plt.axis(<span class="string">"off"</span>)</span><br><span class="line">plt.show(block=<span class="keyword">False</span>)</span><br><span class="line">img_name = <span class="string">"./"</span> + movieName + <span class="string">".jpg"</span></span><br><span class="line">wordcloud.to_file(img_name)</span><br></pre></td></tr></table></figure><p></p><h3 id="End"><a href="#End" class="headerlink" title="End"></a>End</h3><p><a href="https://github.com/vwin/douban-movie-wordcloud" target="_blank" rel="noopener">源码github地址</a></p>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 豆瓣 </tag>
            
            <tag> 电影 </tag>
            
            <tag> 词云 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/02/26/hello-world/"/>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br><a id="more"></a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br><span class="line">or</span><br><span class="line">$ hexo new post <span class="string">"test"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line">or</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">or</span><br><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br><span class="line">or</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
